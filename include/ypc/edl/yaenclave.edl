/* Enclave.edl - Top EDL file. */

enclave {
  include "sgx_eid.h"
  include "ypc/stbox/tsgx/channel/dh_cdef.h"
  from "sgx_tstdc.edl" import *;

  trusted {
    public uint64_t get_ypc_analyzer_version();
  };


  untrusted {
    /* define OCALLs here. */
	  uint32_t km_session_request_ocall([out] sgx_dh_msg1_t *dh_msg1,[out] uint32_t *session_id);
    uint32_t km_exchange_report_ocall([in] sgx_dh_msg2_t *dh_msg2, [out] sgx_dh_msg3_t *dh_msg3, uint32_t session_id);
    uint32_t km_send_request_ocall(uint32_t session_id, [in, size = req_message_size] secure_message_t* req_message, size_t req_message_size, size_t max_payload_size, [out, size=resp_message_size] secure_message_t* resp_message, size_t resp_message_size);
    uint32_t km_end_session_ocall(uint32_t session_id);

    uint32_t km_session_request_oram_ocall([out] sgx_dh_msg1_t *dh_msg1,[out] uint32_t *session_id);
    uint32_t km_exchange_report_oram_ocall([in] sgx_dh_msg2_t *dh_msg2, [out] sgx_dh_msg3_t *dh_msg3, uint32_t session_id);
    uint32_t km_send_request_oram_ocall(uint32_t session_id, [in, size = req_message_size] secure_message_t* req_message, size_t req_message_size, size_t max_payload_size, [out, size=resp_message_size] secure_message_t* resp_message, size_t resp_message_size);
    uint32_t km_end_session_oram_ocall(uint32_t session_id);
  };
};
